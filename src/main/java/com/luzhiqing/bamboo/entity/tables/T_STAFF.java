/*
 * This file is generated by jOOQ.
*/
package com.luzhiqing.bamboo.entity.tables;


import com.luzhiqing.bamboo.constants.converter.GenderTypeConverter;
import com.luzhiqing.bamboo.constants.enums.GenderType;
import com.luzhiqing.bamboo.entity.BambooAuth;
import com.luzhiqing.bamboo.entity.Indexes;
import com.luzhiqing.bamboo.entity.Keys;
import com.luzhiqing.bamboo.entity.tables.records.TStaffRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;

import javax.annotation.Generated;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;


/**
 * 员工信息(这里列了大概的信息，多的可以垂直拆表)
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class T_STAFF extends TableImpl<TStaffRecord> {

    private static final long serialVersionUID = 1580782940;

    /**
     * The reference instance of <code>bamboo_auth.t_staff</code>
     */
    public static final T_STAFF T_STAFF = new T_STAFF();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TStaffRecord> getRecordType() {
        return TStaffRecord.class;
    }

    /**
     * The column <code>bamboo_auth.t_staff.id</code>. 员工id
     */
    public final TableField<TStaffRecord, UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "员工id");

    /**
     * The column <code>bamboo_auth.t_staff.uid</code>. 账号id
     */
    public final TableField<TStaffRecord, UInteger> UID = createField("uid", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "账号id");

    /**
     * The column <code>bamboo_auth.t_staff.email</code>. 员工邮箱
     */
    public final TableField<TStaffRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false).defaultValue(DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "员工邮箱");

    /**
     * The column <code>bamboo_auth.t_staff.phone</code>. 员工手机号
     */
    public final TableField<TStaffRecord, String> PHONE = createField("phone", org.jooq.impl.SQLDataType.VARCHAR(15).nullable(false).defaultValue(DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "员工手机号");

    /**
     * The column <code>bamboo_auth.t_staff.staff_name</code>. 员工姓名
     */
    public final TableField<TStaffRecord, String> STAFF_NAME = createField("staff_name", org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false).defaultValue(DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "员工姓名");

    /**
     * The column <code>bamboo_auth.t_staff.nickname</code>. 员工昵称
     */
    public final TableField<TStaffRecord, String> NICKNAME = createField("nickname", org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false).defaultValue(DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "员工昵称");

    /**
     * The column <code>bamboo_auth.t_staff.avatar</code>. 员工头像(相对路径)
     */
    public final TableField<TStaffRecord, String> AVATAR = createField("avatar", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false).defaultValue(DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "员工头像(相对路径)");

    /**
     * The column <code>bamboo_auth.t_staff.gender</code>. 员工性别
     */
    public final TableField<TStaffRecord, GenderType> GENDER = createField("gender", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "员工性别", new GenderTypeConverter());

    /**
     * The column <code>bamboo_auth.t_staff.create_time</code>.
     */
    public final TableField<TStaffRecord, LocalDateTime> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>bamboo_auth.t_staff.create_user</code>.
     */
    public final TableField<TStaffRecord, Integer> CREATE_USER = createField("create_user", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bamboo_auth.t_staff.create_user_name</code>.
     */
    public final TableField<TStaffRecord, String> CREATE_USER_NAME = createField("create_user_name", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>bamboo_auth.t_staff.update_time</code>.
     */
    public final TableField<TStaffRecord, LocalDateTime> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>bamboo_auth.t_staff.update_user</code>.
     */
    public final TableField<TStaffRecord, Integer> UPDATE_USER = createField("update_user", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>bamboo_auth.t_staff.update_user_name</code>.
     */
    public final TableField<TStaffRecord, String> UPDATE_USER_NAME = createField("update_user_name", org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>bamboo_auth.t_staff.delete_time</code>.
     */
    public final TableField<TStaffRecord, LocalDateTime> DELETE_TIME = createField("delete_time", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>bamboo_auth.t_staff.delete_user</code>.
     */
    public final TableField<TStaffRecord, Integer> DELETE_USER = createField("delete_user", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>bamboo_auth.t_staff.delete_user_name</code>.
     */
    public final TableField<TStaffRecord, String> DELETE_USER_NAME = createField("delete_user_name", org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>bamboo_auth.t_staff.enabled</code>.
     */
    public final TableField<TStaffRecord, Boolean> ENABLED = createField("enabled", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(DSL.inline("1", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * Create a <code>bamboo_auth.t_staff</code> table reference
     */
    public T_STAFF() {
        this(DSL.name("t_staff"), null);
    }

    /**
     * Create an aliased <code>bamboo_auth.t_staff</code> table reference
     */
    public T_STAFF(String alias) {
        this(DSL.name(alias), T_STAFF);
    }

    /**
     * Create an aliased <code>bamboo_auth.t_staff</code> table reference
     */
    public T_STAFF(Name alias) {
        this(alias, T_STAFF);
    }

    private T_STAFF(Name alias, Table<TStaffRecord> aliased) {
        this(alias, aliased, null);
    }

    private T_STAFF(Name alias, Table<TStaffRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "员工信息(这里列了大概的信息，多的可以垂直拆表)");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BambooAuth.BAMBOO_AUTH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_STAFF_IDX_EMAIL, Indexes.T_STAFF_IDX_PHONE, Indexes.T_STAFF_IDX_UID, Indexes.T_STAFF_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TStaffRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_T_STAFF;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TStaffRecord> getPrimaryKey() {
        return Keys.KEY_T_STAFF_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TStaffRecord>> getKeys() {
        return Arrays.<UniqueKey<TStaffRecord>>asList(Keys.KEY_T_STAFF_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public T_STAFF as(String alias) {
        return new T_STAFF(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public T_STAFF as(Name alias) {
        return new T_STAFF(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public T_STAFF rename(String name) {
        return new T_STAFF(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public T_STAFF rename(Name name) {
        return new T_STAFF(name, null);
    }
}
