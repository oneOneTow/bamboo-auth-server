/*
 * This file is generated by jOOQ.
*/
package com.luzhiqing.bamboo.entity.tables;


import com.luzhiqing.bamboo.entity.BambooAuth;
import com.luzhiqing.bamboo.entity.Indexes;
import com.luzhiqing.bamboo.entity.Keys;
import com.luzhiqing.bamboo.entity.tables.records.TAccountUserRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;

import javax.annotation.Generated;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;


/**
 * 账户
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class T_ACCOUNT_USER extends TableImpl<TAccountUserRecord> {

    private static final long serialVersionUID = -1647090654;

    /**
     * The reference instance of <code>bamboo_auth.t_account_user</code>
     */
    public static final T_ACCOUNT_USER T_ACCOUNT_USER = new T_ACCOUNT_USER();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TAccountUserRecord> getRecordType() {
        return TAccountUserRecord.class;
    }

    /**
     * The column <code>bamboo_auth.t_account_user.id</code>. 账号id
     */
    public final TableField<TAccountUserRecord, UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "账号id");

    /**
     * The column <code>bamboo_auth.t_account_user.email</code>. 邮箱
     */
    public final TableField<TAccountUserRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false).defaultValue(DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "邮箱");

    /**
     * The column <code>bamboo_auth.t_account_user.phone</code>. 手机号
     */
    public final TableField<TAccountUserRecord, String> PHONE = createField("phone", org.jooq.impl.SQLDataType.VARCHAR(15).nullable(false).defaultValue(DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "手机号");

    /**
     * The column <code>bamboo_auth.t_account_user.user_name</code>. 用户名
     */
    public final TableField<TAccountUserRecord, String> USER_NAME = createField("user_name", org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false).defaultValue(DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "用户名");

    /**
     * The column <code>bamboo_auth.t_account_user.password</code>. 密码
     */
    public final TableField<TAccountUserRecord, String> PASSWORD = createField("password", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false).defaultValue(DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "密码");

    /**
     * The column <code>bamboo_auth.t_account_user.login_times</code>. 登录次数
     */
    public final TableField<TAccountUserRecord, Integer> LOGIN_TIMES = createField("login_times", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "登录次数");

    /**
     * The column <code>bamboo_auth.t_account_user.create_time</code>.
     */
    public final TableField<TAccountUserRecord, LocalDateTime> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>bamboo_auth.t_account_user.create_user</code>.
     */
    public final TableField<TAccountUserRecord, Integer> CREATE_USER = createField("create_user", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>bamboo_auth.t_account_user.create_user_name</code>.
     */
    public final TableField<TAccountUserRecord, String> CREATE_USER_NAME = createField("create_user_name", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>bamboo_auth.t_account_user.update_time</code>.
     */
    public final TableField<TAccountUserRecord, LocalDateTime> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>bamboo_auth.t_account_user.update_user</code>.
     */
    public final TableField<TAccountUserRecord, Integer> UPDATE_USER = createField("update_user", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>bamboo_auth.t_account_user.update_user_name</code>.
     */
    public final TableField<TAccountUserRecord, String> UPDATE_USER_NAME = createField("update_user_name", org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>bamboo_auth.t_account_user.delete_time</code>.
     */
    public final TableField<TAccountUserRecord, LocalDateTime> DELETE_TIME = createField("delete_time", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>bamboo_auth.t_account_user.delete_user</code>.
     */
    public final TableField<TAccountUserRecord, Integer> DELETE_USER = createField("delete_user", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>bamboo_auth.t_account_user.delete_user_name</code>.
     */
    public final TableField<TAccountUserRecord, String> DELETE_USER_NAME = createField("delete_user_name", org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>bamboo_auth.t_account_user.enabled</code>.
     */
    public final TableField<TAccountUserRecord, Boolean> ENABLED = createField("enabled", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(DSL.inline("1", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * Create a <code>bamboo_auth.t_account_user</code> table reference
     */
    public T_ACCOUNT_USER() {
        this(DSL.name("t_account_user"), null);
    }

    /**
     * Create an aliased <code>bamboo_auth.t_account_user</code> table reference
     */
    public T_ACCOUNT_USER(String alias) {
        this(DSL.name(alias), T_ACCOUNT_USER);
    }

    /**
     * Create an aliased <code>bamboo_auth.t_account_user</code> table reference
     */
    public T_ACCOUNT_USER(Name alias) {
        this(alias, T_ACCOUNT_USER);
    }

    private T_ACCOUNT_USER(Name alias, Table<TAccountUserRecord> aliased) {
        this(alias, aliased, null);
    }

    private T_ACCOUNT_USER(Name alias, Table<TAccountUserRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "账户");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BambooAuth.BAMBOO_AUTH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_ACCOUNT_USER_IDX_EMAIL, Indexes.T_ACCOUNT_USER_IDX_PHONE, Indexes.T_ACCOUNT_USER_IDX_USER_NAME, Indexes.T_ACCOUNT_USER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TAccountUserRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_T_ACCOUNT_USER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TAccountUserRecord> getPrimaryKey() {
        return Keys.KEY_T_ACCOUNT_USER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TAccountUserRecord>> getKeys() {
        return Arrays.<UniqueKey<TAccountUserRecord>>asList(Keys.KEY_T_ACCOUNT_USER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public T_ACCOUNT_USER as(String alias) {
        return new T_ACCOUNT_USER(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public T_ACCOUNT_USER as(Name alias) {
        return new T_ACCOUNT_USER(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public T_ACCOUNT_USER rename(String name) {
        return new T_ACCOUNT_USER(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public T_ACCOUNT_USER rename(Name name) {
        return new T_ACCOUNT_USER(name, null);
    }
}
